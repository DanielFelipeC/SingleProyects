/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mail;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author dfcastellanosc
 */
public class FormMsg extends javax.swing.JFrame {

    private String receptor;
    private String copia;
    private String mensaje;
    private String asuntoMsg;

    private static Correo miEmail;

    /**
     * Creates new form FormMsg
     */
    public FormMsg() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        cuerpomensaje = new javax.swing.JTextArea();
        enviar = new javax.swing.JButton();
        concopia = new javax.swing.JTextField();
        remitente = new javax.swing.JTextField();
        asunto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cuerpomensaje.setColumns(20);
        cuerpomensaje.setRows(5);
        cuerpomensaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cuerpomensajeKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(cuerpomensaje);

        enviar.setText("Enviar");
        enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarActionPerformed(evt);
            }
        });
        enviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enviarKeyPressed(evt);
            }
        });

        concopia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concopiaActionPerformed(evt);
            }
        });

        remitente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                remitenteActionPerformed(evt);
            }
        });
        remitente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                remitenteKeyPressed(evt);
            }
        });

        asunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                asuntoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Para:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("CC:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Asunto:");

        cancelar.setText("Cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        cancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cancelarKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Mensaje");

        jButton1.setText("+");
        jButton1.setToolTipText("Agregar Correo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(concopia, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(asunto, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(remitente)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remitente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(asunto, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(concopia, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enviar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void concopiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concopiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_concopiaActionPerformed

    private void remitenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_remitenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_remitenteActionPerformed

    private void asuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asuntoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asuntoActionPerformed

    private void enviarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enviarKeyPressed

    }//GEN-LAST:event_enviarKeyPressed

    private void enviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarActionPerformed
        receptor = remitente.getText();
        copia = concopia.getText();
        mensaje = cuerpomensaje.getText();
        asuntoMsg = asunto.getText();
        try {
            enviarCorreo(receptor, asuntoMsg, copia, mensaje);
        } catch (MessagingException ex) {
            Logger.getLogger(FormMsg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enviarActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cancelarActionPerformed

    private void cancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cancelarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelarKeyPressed

    private void cuerpomensajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cuerpomensajeKeyPressed
        if (!remitente.getText().equals(new String())) {
            if (evt.getKeyCode() == 10) {
                this.enviar.doClick();
            }
        }

    }//GEN-LAST:event_cuerpomensajeKeyPressed

    private void remitenteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remitenteKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!cuerpomensaje.getText().equals(new String()) && !remitente.getText().equals(new String())) {
                this.enviar.doClick();
            }
        }

    }//GEN-LAST:event_remitenteKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormMsg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormMsg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormMsg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormMsg.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FormMsg().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField asunto;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField concopia;
    private javax.swing.JTextArea cuerpomensaje;
    private javax.swing.JButton enviar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField remitente;
    // End of variables declaration//GEN-END:variables

    public String getReceptor() {
        return receptor;
    }

    public void setReceptor(String receptor) {
        this.receptor = receptor;
    }

    public String getCopia() {
        return copia;
    }

    public void setCopia(String copia) {
        this.copia = copia;
    }

    public String getMensaje() {
        return mensaje;
    }

    public void setMensaje(String mensaje) {
        this.mensaje = mensaje;
    }

    @SuppressWarnings("empty-statement")
    public static void enviarCorreo(String para, String asunto, String copia, String mensaje) throws MessagingException {
        try {
            java.util.Properties mailServerProperties;
            mailServerProperties = System.getProperties();
            if (miEmail.getEmail().contains("gmail")) {
                mailServerProperties.put("mail.smtp.host", "smtp.gmail.com");
                mailServerProperties.put("mail.smtp.socketFactory.port", "465");
                mailServerProperties.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                mailServerProperties.put("mail.smtp.auth", "true");
                mailServerProperties.put("mail.smtp.port", "465");
            } else if (miEmail.getEmail().contains("yahoo")) {
                mailServerProperties.put("mail.smtp.auth", "true");
                mailServerProperties.put("mail.smtp.starttls.enable", "true");
                mailServerProperties.put("mail.smtp.host", "mail.smtp.yahoo.com");
                mailServerProperties.put("mail.smtp.port", "465");
            } else if (miEmail.getEmail().contains("hotmail") || miEmail.getEmail().contains("outlook")) {
                mailServerProperties.put("mail.smtp.auth", "true");
                mailServerProperties.put("mail.smtp.starttls.enable", "true");
                mailServerProperties.put("mail.smtp.host", "outlook.office365.com");
                mailServerProperties.put("mail.smtp.port", "587");
            }

            javax.mail.Session getMailSession = Session.getDefaultInstance(mailServerProperties, new javax.mail.Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(miEmail.getEmail(), miEmail.getPassword());
                }
            });

            javax.mail.internet.MimeMessage generateMailMessage;
            generateMailMessage = new MimeMessage(getMailSession);
            
            
            //Estableciendo el destino (TO)
            if (!para.equals(new String())) {

                List<String> correos = new ArrayList<>();

                while (!para.equals(new String())) {

                    String emails = (para.split(",")[0]);
                    correos.add(emails);
                    if (para.contains(",")) {
                        para = para.substring(emails.toCharArray().length + 1);
                    } else {
                        para = para.substring(emails.toCharArray().length);
                    }
                }

                for (String emailF : correos) {
                    generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(emailF));
                }

//                for (Address recipient : generateMailMessage.getRecipients(Message.RecipientType.TO)) {
//                    System.out.println("Email: " + recipient);
//                }

                //Estableciendo el destino de la copia (CC)
                if (!copia.equals(new String())) {
                    generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress(copia));
                }
                //Estableciendo el destino de la copia oculta (BCC)
                //        generateMailMessage.addReci pient(Message.RecipientType.BCC, new InternetAddress("dfelipecast@hotmail.com"));

                //Estableciendo el titulo del mensaje (subject)
                int opcAsun = 0;
                if (asunto.equals(new String())) {
                    opcAsun = JOptionPane.showConfirmDialog(null, "Va a enviar un mensaje sin asunto desea continuar?", "Asunto Vacio", 1);
                }

                if (opcAsun == 0) {
                    generateMailMessage.setSubject(asunto);

                    // Estableciendo el contenido del correo electronico enriquesido(HTML)
                    String bodyEmail = "<h2>" + mensaje + "</h2>";
                    generateMailMessage.setContent(bodyEmail, "text/html");

                    //Finalmente se envia el correo
                    int opcMsg = 0;
                    if (mensaje.equals(new String())) {
                        opcMsg = JOptionPane.showConfirmDialog(null, "El mensaje esta vacio desea continuar?", "Mensaje Vacio", 1);
                    }

                    if (opcMsg == 0) {
                        javax.mail.Transport.send(generateMailMessage);
                        JOptionPane.showMessageDialog(null, "El mensaje se envio correctamente");
                        System.exit(0);
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "El mensaje debe contener un destinatario");
            }

        } catch (MessagingException e) {
            JOptionPane.showMessageDialog(null, "El mensaje no se pudo enviar, es posible que la dirección de correo no exista o este mal escrita");
            System.out.println(e.getMessage());
        }

    }

    public javax.swing.JTextField getAsunto() {
        return asunto;
    }

    public void setAsunto(javax.swing.JTextField asunto) {
        this.asunto = asunto;
    }

    public Correo getMiEmail() {
        return miEmail;
    }

    public void setMiEmail(Correo miEmail) {
        this.miEmail = miEmail;
    }

}
